networks:
  sentiric-net:
    # external: true
    name: ${NETWORK_NAME:-sentiric-net}

volumes:
  rabbitmq_data:
  redis-data:

services:

  rabbitmq:
    image: rabbitmq:4.1.0-management-alpine
    env_file:
      - ./.env.docker
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    # ports:
    #   - "${RABBITMQ_PORT:-5672}:${RABBITMQ_PORT:-5672}"
    #   - "15672:15672"
    networks:
      - sentiric-net
    profiles:
      - default
      - data
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    env_file:
      - ./.env.docker
    # ports:
    #   - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - sentiric-net
    volumes:
      - redis-data:/data
    restart: always
    profiles:
      - default
      - data

  task-service:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env.docker
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "5003"]
    ports:
      - "${TASK_SERVICE_PORT}:${TASK_SERVICE_PORT}"
    networks:
      - sentiric-net

    restart: unless-stopped

    depends_on:
      - rabbitmq
      - redis    

  task-service-worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env.docker
    
    user: "1000:1000"

    command: ["celery", "-A", "app.core.celery_app", "worker", "-l", "info"]
    
    networks:
      - sentiric-net
    
    restart: unless-stopped

    depends_on:
          - rabbitmq
          - redis
        
  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=${RABBITMQ_URL}
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    networks:
      - sentiric-net

    restart: unless-stopped

    depends_on:
      - rabbitmq    
